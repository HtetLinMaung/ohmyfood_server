type Category {
  _id: String!
  name: String!
  price: Float!
  discountPercent: Float!
  openHour: String!
  closeHour: String!
  imageUrl: String!
  tags: [String!]
  types: [CategoryType!]
  menus: [String!]
  deletedAt: String
  createdAt: String!
  updatedAt: String!
}

input CategoryInput {
  name: String!
  price: Float!
  discountPercent: Float!
  openHour: String!
  closeHour: String!
  imageUrl: String!
  tags: [String!]
  types: [String!]
  menus: [String!]
}

type Categories {
  page: Int!
  perPage: Int!
  totalRows: Int!
  categories: [Category!]
}

type RootQuery {
  categories(page: Int!, perPage: Int!): Categories
  category(id: ID!): Category!
}

type RootMutation {
  createCategory(categoryInput: CategoryInput): Category!
  updateCategory(id: ID!, categoryInput: CategoryInput): Category!
  deleteCategory(id: ID!, permanent: Boolean!): Boolean!
}

schema {
  query: RootQuery
  mutation: RootMutation
}
